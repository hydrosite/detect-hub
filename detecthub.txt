--[=[
 d888b  db    db d888888b      .d888b.      db      db    db  .d8b.  
88' Y8b 88    88   `88'        VP  `8D      88      88    88 d8' `8b 
88      88    88    88            odD'      88      88    88 88ooo88 
88  ooo 88    88    88          .88'        88      88    88 88~~~88 
88. ~8~ 88b  d88   .88.        j88.         88booo. 88b  d88 88   88    @uniquadev
 Y888P  ~Y8888P' Y888888P      888888D      Y88888P ~Y8888P' YP   YP  CONVERTER 
]=]

-- Instances: 50 | Scripts: 10 | Modules: 0 | Tags: 0
local G2L = {};

-- StarterGui.ScreenGui
G2L["1"] = Instance.new("ScreenGui", game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui"));
G2L["1"]["ZIndexBehavior"] = Enum.ZIndexBehavior.Sibling;
G2L["1"]["ResetOnSpawn"] = false;


-- StarterGui.ScreenGui.Frame
G2L["2"] = Instance.new("Frame", G2L["1"]);
G2L["2"]["BorderSizePixel"] = 0;
G2L["2"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2"]["Size"] = UDim2.new(0, 344, 0, 468);
G2L["2"]["Position"] = UDim2.new(0.06578, 0, 0.03273, 0);
G2L["2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.ScreenGui.Frame.UIGradient
G2L["3"] = Instance.new("UIGradient", G2L["2"]);



-- StarterGui.ScreenGui.Frame.TextLabel
G2L["4"] = Instance.new("TextLabel", G2L["2"]);
G2L["4"]["TextWrapped"] = true;
G2L["4"]["TextStrokeColor3"] = Color3.fromRGB(255, 0, 0);
G2L["4"]["TextScaled"] = true;
G2L["4"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["4"]["TextSize"] = 5;
G2L["4"]["FontFace"] = Font.new([[rbxasset://fonts/families/Creepster.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["4"]["BorderMode"] = Enum.BorderMode.Middle;
G2L["4"]["TextColor3"] = Color3.fromRGB(116, 0, 0);
G2L["4"]["BackgroundTransparency"] = 1;
G2L["4"]["Size"] = UDim2.new(0, 167, 0, 41);
G2L["4"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4"]["Text"] = [[DETECT HUB]];
G2L["4"]["Position"] = UDim2.new(0.26147, 0, 0.01525, 0);


-- StarterGui.ScreenGui.Frame.Speed
G2L["5"] = Instance.new("TextButton", G2L["2"]);
G2L["5"]["BorderSizePixel"] = 0;
G2L["5"]["TextSize"] = 14;
G2L["5"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5"]["BackgroundColor3"] = Color3.fromRGB(104, 0, 3);
G2L["5"]["FontFace"] = Font.new([[rbxasset://fonts/families/Creepster.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["5"]["Size"] = UDim2.new(0, 71, 0, 24);
G2L["5"]["Name"] = [[Speed]];
G2L["5"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5"]["Text"] = [[Speed]];
G2L["5"]["Position"] = UDim2.new(0.03177, 0, 0.23477, 0);


-- StarterGui.ScreenGui.Frame.Speed.UICorner
G2L["6"] = Instance.new("UICorner", G2L["5"]);



-- StarterGui.ScreenGui.Frame.Speed.LocalScript
G2L["7"] = Instance.new("LocalScript", G2L["5"]);



-- StarterGui.ScreenGui.Frame.UICorner
G2L["8"] = Instance.new("UICorner", G2L["2"]);
G2L["8"]["CornerRadius"] = UDim.new(0, 25);


-- StarterGui.ScreenGui.Frame.LocalScript
G2L["9"] = Instance.new("LocalScript", G2L["2"]);



-- StarterGui.ScreenGui.Frame.Frame
G2L["a"] = Instance.new("Frame", G2L["2"]);
G2L["a"]["BorderSizePixel"] = 0;
G2L["a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["a"]["Size"] = UDim2.new(0, 343, 0, 468);
G2L["a"]["Position"] = UDim2.new(0, 0, -0, 0);
G2L["a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["a"]["BackgroundTransparency"] = 1;


-- StarterGui.ScreenGui.Frame.Frame.UIStroke
G2L["b"] = Instance.new("UIStroke", G2L["a"]);
G2L["b"]["Thickness"] = 5;
G2L["b"]["Color"] = Color3.fromRGB(135, 0, 0);


-- StarterGui.ScreenGui.Frame.Frame.UICorner
G2L["c"] = Instance.new("UICorner", G2L["a"]);
G2L["c"]["CornerRadius"] = UDim.new(0, 25);


-- StarterGui.ScreenGui.Frame.TextLabel
G2L["d"] = Instance.new("TextLabel", G2L["2"]);
G2L["d"]["TextWrapped"] = true;
G2L["d"]["BorderSizePixel"] = 0;
G2L["d"]["TextScaled"] = true;
G2L["d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["d"]["TextSize"] = 14;
G2L["d"]["FontFace"] = Font.new([[rbxasset://fonts/families/Kalam.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["d"]["TextColor3"] = Color3.fromRGB(176, 0, 0);
G2L["d"]["BackgroundTransparency"] = 1;
G2L["d"]["Size"] = UDim2.new(0, 129, 0, 40);
G2L["d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["d"]["Text"] = [[Undetectable Section]];
G2L["d"]["Position"] = UDim2.new(0.31134, 0, 0.13492, 0);


-- StarterGui.ScreenGui.Frame.Jump
G2L["e"] = Instance.new("TextButton", G2L["2"]);
G2L["e"]["BorderSizePixel"] = 0;
G2L["e"]["TextSize"] = 14;
G2L["e"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["e"]["BackgroundColor3"] = Color3.fromRGB(104, 0, 3);
G2L["e"]["FontFace"] = Font.new([[rbxasset://fonts/families/Creepster.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["e"]["Size"] = UDim2.new(0, 73, 0, 24);
G2L["e"]["Name"] = [[Jump]];
G2L["e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["e"]["Text"] = [[Jump Power]];
G2L["e"]["Position"] = UDim2.new(0.32904, 0, 0.23477, 0);


-- StarterGui.ScreenGui.Frame.Jump.UICorner
G2L["f"] = Instance.new("UICorner", G2L["e"]);



-- StarterGui.ScreenGui.Frame.Jump.LocalScript
G2L["10"] = Instance.new("LocalScript", G2L["e"]);



-- StarterGui.ScreenGui.Frame.AimBot
G2L["11"] = Instance.new("TextButton", G2L["2"]);
G2L["11"]["BorderSizePixel"] = 0;
G2L["11"]["TextSize"] = 14;
G2L["11"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["11"]["BackgroundColor3"] = Color3.fromRGB(104, 0, 3);
G2L["11"]["FontFace"] = Font.new([[rbxasset://fonts/families/Creepster.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["11"]["Size"] = UDim2.new(0, 59, 0, 25);
G2L["11"]["Name"] = [[AimBot]];
G2L["11"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["11"]["Text"] = [[Aimbot]];
G2L["11"]["Position"] = UDim2.new(0.02962, 0, 0.45666, 0);


-- StarterGui.ScreenGui.Frame.AimBot.UICorner
G2L["12"] = Instance.new("UICorner", G2L["11"]);



-- StarterGui.ScreenGui.Frame.AimBot.LocalScript
G2L["13"] = Instance.new("LocalScript", G2L["11"]);



-- StarterGui.ScreenGui.Frame.TextLabel
G2L["14"] = Instance.new("TextLabel", G2L["2"]);
G2L["14"]["TextWrapped"] = true;
G2L["14"]["BorderSizePixel"] = 0;
G2L["14"]["TextScaled"] = true;
G2L["14"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["14"]["TextSize"] = 14;
G2L["14"]["FontFace"] = Font.new([[rbxasset://fonts/families/Kalam.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["14"]["TextColor3"] = Color3.fromRGB(176, 0, 0);
G2L["14"]["BackgroundTransparency"] = 1;
G2L["14"]["Size"] = UDim2.new(0, 70, 0, 30);
G2L["14"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["14"]["Text"] = [[Stuff]];
G2L["14"]["Position"] = UDim2.new(0.37218, 0, 0.35311, 0);


-- StarterGui.ScreenGui.Frame.Tracers
G2L["15"] = Instance.new("TextButton", G2L["2"]);
G2L["15"]["BorderSizePixel"] = 0;
G2L["15"]["TextSize"] = 14;
G2L["15"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["15"]["BackgroundColor3"] = Color3.fromRGB(104, 0, 3);
G2L["15"]["FontFace"] = Font.new([[rbxasset://fonts/families/Creepster.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["15"]["Size"] = UDim2.new(0, 59, 0, 25);
G2L["15"]["Name"] = [[Tracers]];
G2L["15"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["15"]["Text"] = [[Tracers]];
G2L["15"]["Position"] = UDim2.new(0.35811, 0, 0.45666, 0);


-- StarterGui.ScreenGui.Frame.Tracers.UICorner
G2L["16"] = Instance.new("UICorner", G2L["15"]);



-- StarterGui.ScreenGui.Frame.Tracers.LocalScript
G2L["17"] = Instance.new("LocalScript", G2L["15"]);



-- StarterGui.ScreenGui.Frame.TeleportToPosition
G2L["18"] = Instance.new("TextButton", G2L["2"]);
G2L["18"]["BorderSizePixel"] = 0;
G2L["18"]["TextSize"] = 14;
G2L["18"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["18"]["BackgroundColor3"] = Color3.fromRGB(104, 0, 3);
G2L["18"]["FontFace"] = Font.new([[rbxasset://fonts/families/Creepster.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["18"]["Size"] = UDim2.new(0, 98, 0, 25);
G2L["18"]["Name"] = [[TeleportToPosition]];
G2L["18"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["18"]["Text"] = [[Teleport To Cords]];
G2L["18"]["Position"] = UDim2.new(0.68576, 0, 0.45692, 0);


-- StarterGui.ScreenGui.Frame.TeleportToPosition.UICorner
G2L["19"] = Instance.new("UICorner", G2L["18"]);



-- StarterGui.ScreenGui.Frame.TeleportToPosition.LocalScript
G2L["1a"] = Instance.new("LocalScript", G2L["18"]);



-- StarterGui.ScreenGui.Frame.TeleportToPosition.TextLabel
G2L["1b"] = Instance.new("TextLabel", G2L["18"]);
G2L["1b"]["TextWrapped"] = true;
G2L["1b"]["BorderSizePixel"] = 0;
G2L["1b"]["TextScaled"] = true;
G2L["1b"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1b"]["TextSize"] = 14;
G2L["1b"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["1b"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1b"]["Size"] = UDim2.new(0, 103, 0, 50);
G2L["1b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1b"]["Text"] = [[If You Press X And Rerun The Script The Teleport To Cords Will Stop Working You WIll Have To Rejoin]];
G2L["1b"]["Position"] = UDim2.new(1.15756, 0, -0.38336, 0);


-- StarterGui.ScreenGui.Frame.TextLabel
G2L["1c"] = Instance.new("TextLabel", G2L["2"]);
G2L["1c"]["TextWrapped"] = true;
G2L["1c"]["BorderSizePixel"] = 0;
G2L["1c"]["TextScaled"] = true;
G2L["1c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1c"]["TextSize"] = 14;
G2L["1c"]["FontFace"] = Font.new([[rbxasset://fonts/families/Kalam.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["1c"]["TextColor3"] = Color3.fromRGB(176, 0, 0);
G2L["1c"]["BackgroundTransparency"] = 1;
G2L["1c"]["Size"] = UDim2.new(0, 220, 0, 40);
G2L["1c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1c"]["Text"] = [[Normal Section (Maybe Detectable)]];
G2L["1c"]["Position"] = UDim2.new(0.14982, 0, 0.70826, 0);


-- StarterGui.ScreenGui.Frame.TextLabel
G2L["1d"] = Instance.new("TextLabel", G2L["2"]);
G2L["1d"]["BorderSizePixel"] = 0;
G2L["1d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1d"]["TextSize"] = 14;
G2L["1d"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["1d"]["TextColor3"] = Color3.fromRGB(142, 0, 0);
G2L["1d"]["BackgroundTransparency"] = 1;
G2L["1d"]["Size"] = UDim2.new(0, 283, 0, 64);
G2L["1d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1d"]["Text"] = [[_________________________________________________________]];
G2L["1d"]["Position"] = UDim2.new(0.08732, 0, 0.1334, 0);


-- StarterGui.ScreenGui.Frame.Jump Power (Normal)
G2L["1e"] = Instance.new("TextButton", G2L["2"]);
G2L["1e"]["BorderSizePixel"] = 0;
G2L["1e"]["TextSize"] = 14;
G2L["1e"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1e"]["BackgroundColor3"] = Color3.fromRGB(104, 0, 3);
G2L["1e"]["FontFace"] = Font.new([[rbxasset://fonts/families/Creepster.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["1e"]["Size"] = UDim2.new(0, 111, 0, 27);
G2L["1e"]["Name"] = [[Jump Power (Normal)]];
G2L["1e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1e"]["Text"] = [[Jump Power (Normal)]];
G2L["1e"]["Position"] = UDim2.new(0.64715, 0, 0.82661, 0);


-- StarterGui.ScreenGui.Frame.Jump Power (Normal).TextBox
G2L["1f"] = Instance.new("TextBox", G2L["1e"]);
G2L["1f"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1f"]["PlaceholderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1f"]["BorderSizePixel"] = 0;
G2L["1f"]["TextSize"] = 14;
G2L["1f"]["BackgroundColor3"] = Color3.fromRGB(137, 0, 0);
G2L["1f"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["1f"]["PlaceholderText"] = [[Enter Value]];
G2L["1f"]["Size"] = UDim2.new(0, 72, 0, 20);
G2L["1f"]["Position"] = UDim2.new(0.14608, 0, 1.33333, 0);
G2L["1f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1f"]["Text"] = [[]];


-- StarterGui.ScreenGui.Frame.Jump Power (Normal).TextBox.UICorner
G2L["20"] = Instance.new("UICorner", G2L["1f"]);



-- StarterGui.ScreenGui.Frame.Jump Power (Normal).LocalScript
G2L["21"] = Instance.new("LocalScript", G2L["1e"]);



-- StarterGui.ScreenGui.Frame.Jump Power (Normal).UICorner
G2L["22"] = Instance.new("UICorner", G2L["1e"]);



-- StarterGui.ScreenGui.Frame.TextLabel
G2L["23"] = Instance.new("TextLabel", G2L["2"]);
G2L["23"]["BorderSizePixel"] = 0;
G2L["23"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["23"]["TextSize"] = 14;
G2L["23"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["23"]["TextColor3"] = Color3.fromRGB(142, 0, 0);
G2L["23"]["BackgroundTransparency"] = 1;
G2L["23"]["Size"] = UDim2.new(0, 283, 0, 64);
G2L["23"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["23"]["Text"] = [[_________________________________________________________]];
G2L["23"]["Position"] = UDim2.new(0.08732, 0, 0.04579, 0);


-- StarterGui.ScreenGui.Frame.Air Jump
G2L["24"] = Instance.new("TextButton", G2L["2"]);
G2L["24"]["BorderSizePixel"] = 0;
G2L["24"]["TextSize"] = 14;
G2L["24"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["24"]["BackgroundColor3"] = Color3.fromRGB(104, 0, 3);
G2L["24"]["FontFace"] = Font.new([[rbxasset://fonts/families/Creepster.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["24"]["Size"] = UDim2.new(0, 79, 0, 26);
G2L["24"]["Name"] = [[Air Jump]];
G2L["24"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["24"]["Text"] = [[Infinite Jump]];
G2L["24"]["Position"] = UDim2.new(0.35977, 0, 0.89508, 0);


-- StarterGui.ScreenGui.Frame.Air Jump.UICorner
G2L["25"] = Instance.new("UICorner", G2L["24"]);



-- StarterGui.ScreenGui.Frame.Air Jump.LocalScript
G2L["26"] = Instance.new("LocalScript", G2L["24"]);



-- StarterGui.ScreenGui.Frame.TextLabel
G2L["27"] = Instance.new("TextLabel", G2L["2"]);
G2L["27"]["BorderSizePixel"] = 0;
G2L["27"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["27"]["TextSize"] = 14;
G2L["27"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["27"]["TextColor3"] = Color3.fromRGB(142, 0, 0);
G2L["27"]["BackgroundTransparency"] = 1;
G2L["27"]["Size"] = UDim2.new(0, 283, 0, 64);
G2L["27"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["27"]["Text"] = [[_________________________________________________________]];
G2L["27"]["Position"] = UDim2.new(0.08732, 0, 0.25305, 0);


-- StarterGui.ScreenGui.Frame.TextLabel
G2L["28"] = Instance.new("TextLabel", G2L["2"]);
G2L["28"]["BorderSizePixel"] = 0;
G2L["28"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["28"]["TextSize"] = 14;
G2L["28"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["28"]["TextColor3"] = Color3.fromRGB(142, 0, 0);
G2L["28"]["BackgroundTransparency"] = 1;
G2L["28"]["Size"] = UDim2.new(0, 283, 0, 64);
G2L["28"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["28"]["Text"] = [[_________________________________________________________]];
G2L["28"]["Position"] = UDim2.new(0.08732, 0, 0.33852, 0);


-- StarterGui.ScreenGui.Frame.TextLabel
G2L["29"] = Instance.new("TextLabel", G2L["2"]);
G2L["29"]["BorderSizePixel"] = 0;
G2L["29"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["29"]["TextSize"] = 14;
G2L["29"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["29"]["TextColor3"] = Color3.fromRGB(142, 0, 0);
G2L["29"]["BackgroundTransparency"] = 1;
G2L["29"]["Size"] = UDim2.new(0, 283, 0, 64);
G2L["29"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["29"]["Text"] = [[_________________________________________________________]];
G2L["29"]["Position"] = UDim2.new(0.09314, 0, 0.61844, 0);


-- StarterGui.ScreenGui.Frame.TextLabel
G2L["2a"] = Instance.new("TextLabel", G2L["2"]);
G2L["2a"]["BorderSizePixel"] = 0;
G2L["2a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["2a"]["TextSize"] = 14;
G2L["2a"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["2a"]["TextColor3"] = Color3.fromRGB(142, 0, 0);
G2L["2a"]["BackgroundTransparency"] = 1;
G2L["2a"]["Size"] = UDim2.new(0, 283, 0, 64);
G2L["2a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2a"]["Text"] = [[_________________________________________________________]];
G2L["2a"]["Position"] = UDim2.new(0.09314, 0, 0.70818, 0);


-- StarterGui.ScreenGui.Frame.Speed (Normal)
G2L["2b"] = Instance.new("TextButton", G2L["2"]);
G2L["2b"]["BorderSizePixel"] = 0;
G2L["2b"]["TextSize"] = 14;
G2L["2b"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2b"]["BackgroundColor3"] = Color3.fromRGB(104, 0, 3);
G2L["2b"]["FontFace"] = Font.new([[rbxasset://fonts/families/Creepster.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["2b"]["Size"] = UDim2.new(0, 79, 0, 26);
G2L["2b"]["Name"] = [[Speed (Normal)]];
G2L["2b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2b"]["Text"] = [[Speed (Normal)]];
G2L["2b"]["Position"] = UDim2.new(0.03419, 0, 0.8267, 0);


-- StarterGui.ScreenGui.Frame.Speed (Normal).UICorner
G2L["2c"] = Instance.new("UICorner", G2L["2b"]);



-- StarterGui.ScreenGui.Frame.Speed (Normal).LocalScript
G2L["2d"] = Instance.new("LocalScript", G2L["2b"]);



-- StarterGui.ScreenGui.Frame.Speed (Normal).TextBox
G2L["2e"] = Instance.new("TextBox", G2L["2b"]);
G2L["2e"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2e"]["PlaceholderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2e"]["BorderSizePixel"] = 0;
G2L["2e"]["TextSize"] = 14;
G2L["2e"]["BackgroundColor3"] = Color3.fromRGB(137, 0, 0);
G2L["2e"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["2e"]["PlaceholderText"] = [[Enter Value]];
G2L["2e"]["Size"] = UDim2.new(0, 72, 0, 20);
G2L["2e"]["Position"] = UDim2.new(0.03797, 0, 1.34615, 0);
G2L["2e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2e"]["Text"] = [[]];


-- StarterGui.ScreenGui.Frame.Speed (Normal).TextBox.UICorner
G2L["2f"] = Instance.new("UICorner", G2L["2e"]);



-- StarterGui.ScreenGui.Frame.X
G2L["30"] = Instance.new("TextButton", G2L["2"]);
G2L["30"]["BorderSizePixel"] = 0;
G2L["30"]["TextSize"] = 14;
G2L["30"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["30"]["BackgroundColor3"] = Color3.fromRGB(110, 0, 0);
G2L["30"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["30"]["Size"] = UDim2.new(0, 35, 0, 32);
G2L["30"]["Name"] = [[X]];
G2L["30"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["30"]["Text"] = [[X]];
G2L["30"]["Position"] = UDim2.new(0.91379, 0, -0.02158, 0);


-- StarterGui.ScreenGui.Frame.X.UICorner
G2L["31"] = Instance.new("UICorner", G2L["30"]);



-- StarterGui.ScreenGui.Frame.X.LocalScript
G2L["32"] = Instance.new("LocalScript", G2L["30"]);



-- StarterGui.ScreenGui.Frame.Speed.LocalScript
local function C_7()
local script = G2L["7"];
	local button = script.Parent
	local RunService = game:GetService("RunService")
	local player = game.Players.LocalPlayer
	local enabled = false -- Start with movement disabled
	
	-- Function to toggle movement
	local function toggleMovement()
		enabled = not enabled -- Toggle the state
	end
	
	-- Connect button click to toggle movement
	button.MouseButton1Click:Connect(toggleMovement)
	
	-- Heartbeat connection
	RunService.Heartbeat:Connect(function(deltatime)
		if enabled then
			local hum = player.Character and player.Character:FindFirstChild("Humanoid")
			if hum and not hum.SeatPart then
				local movedir = hum.MoveDirection
				local speeddir = (movedir * deltatime) * 20
				player.Character:TranslateBy(speeddir)
			end
		end
	end)
	
end;
task.spawn(C_7);
-- StarterGui.ScreenGui.Frame.LocalScript
local function C_9()
local script = G2L["9"];
	local frame = script.Parent -- The Frame you want to make draggable
	local userInputService = game:GetService("UserInputService")
	local runService = game:GetService("RunService")
	
	local dragging = false
	local dragInput
	local dragStart
	local startPos
	
	local function update(input)
		local delta = input.Position - dragStart
		frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
	end
	
	frame.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = true
			dragStart = input.Position
			startPos = frame.Position
	
			-- Connect to input ended to stop dragging
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
	
			-- Connect to MouseMoved to update position
			userInputService.InputChanged:Connect(function(inputChanged)
				if inputChanged.UserInputType == Enum.UserInputType.MouseMovement and dragging then
					update(inputChanged)
				end
			end)
		end
	end)
	
end;
task.spawn(C_9);
-- StarterGui.ScreenGui.Frame.Jump.LocalScript
local function C_10()
local script = G2L["10"];
	local button = script.Parent
	local UserInputService = game:GetService("UserInputService")
	local Players = game:GetService("Players")
	local player = Players.LocalPlayer
	
	local isEnabled = false -- toggle variable
	local canJump = true -- variable to track jump availability
	
	-- Function to toggle jump functionality
	local function toggleJump()
		isEnabled = not isEnabled -- toggle the variable
	end
	
	-- Connect button click to toggle jump
	button.MouseButton1Click:Connect(toggleJump)
	
	-- Input event for jumping
	UserInputService.InputBegan:Connect(function(input)
		if input.KeyCode == Enum.KeyCode.Space and isEnabled and canJump then
			canJump = false -- set canJump to false
			local character = player.Character
			if character then
				character.HumanoidRootPart.CFrame = character.HumanoidRootPart.CFrame + Vector3.new(0, 15, 0)
			end
			wait(0.5) -- wait 0.5 seconds
			canJump = true -- set canJump back to true
		end
	end)
	
end;
task.spawn(C_10);
-- StarterGui.ScreenGui.Frame.AimBot.LocalScript
local function C_13()
local script = G2L["13"];
	local player = game.Players.LocalPlayer
	local camera = game.Workspace.CurrentCamera
	local RunService = game:GetService("RunService")
	
	local button = script.Parent -- Reference to the button itself
	local smoothingFactor = 0.1 -- Adjust this value for smoother or snappier rotations
	local radius = 500 -- Set the radius within which the player will look at others
	
	local rotationEnabled = false -- Initially, rotation is disabled
	
	local function getNearestPlayer()
		local nearestPlayer = nil
		local nearestDistance = math.huge
	
		for _, otherPlayer in ipairs(game.Players:GetPlayers()) do
			if otherPlayer ~= player and otherPlayer.Character and otherPlayer.Character:FindFirstChild("HumanoidRootPart") then
				local distance = (player.Character.HumanoidRootPart.Position - otherPlayer.Character.HumanoidRootPart.Position).magnitude
				if distance < nearestDistance and distance <= radius then
					nearestDistance = distance
					nearestPlayer = otherPlayer
				end
			end
		end
	
		return nearestPlayer
	end
	
	local function rotateTowardsPlayer()
		local nearestPlayer = getNearestPlayer()
	
		if nearestPlayer then
			local targetPosition = nearestPlayer.Character.HumanoidRootPart.Position
			local characterPosition = player.Character.HumanoidRootPart.Position
	
			-- Calculate the direction to look at
			local lookAtCFrame = CFrame.new(characterPosition, targetPosition)
	
			-- Smoothly interpolate the camera's CFrame
			camera.CFrame = camera.CFrame:Lerp(lookAtCFrame, smoothingFactor)
	
			-- Smoothly rotate the player's character towards the target
			local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
			if humanoid then
				humanoid.RootPart.CFrame = humanoid.RootPart.CFrame:Lerp(lookAtCFrame, smoothingFactor)
			end
		end
	end
	
	local function onRenderStep()
		if rotationEnabled then
			rotateTowardsPlayer()
		end
	end
	
	button.MouseButton1Click:Connect(function()
		rotationEnabled = not rotationEnabled -- Toggle rotation on button click
	end)
	
	RunService.RenderStepped:Connect(onRenderStep)
	
	player.CharacterAdded:Connect(function()
		rotationEnabled = false -- Disable rotation when respawning
	end)
	
end;
task.spawn(C_13);
-- StarterGui.ScreenGui.Frame.Tracers.LocalScript
local function C_17()
local script = G2L["17"];
	-- Assuming your existing button is referenced here
	local toggleButton = script.Parent -- Change this to the actual reference to your button if needed
	
	-- Get the local player's character
	local localPlayer = game.Players.LocalPlayer
	
	-- Create a dictionary to store the beams
	local beams = {}
	
	-- Variable to track beam visibility
	local beamsActive = false
	
	-- Function to create a beam
	local function createBeam(fromHead, toHead, userId)
		local beam = Instance.new("Beam")
		beam.Parent = workspace
		beam.Color = ColorSequence.new(Color3.new(1, 0, 0)) -- Red color
		beam.Width0 = 0.5
		beam.Width1 = 0.5
	
		local attachment0 = Instance.new("Attachment")
		attachment0.Parent = fromHead
		local attachment1 = Instance.new("Attachment")
		attachment1.Parent = toHead
		beam.Attachment0 = attachment0
		beam.Attachment1 = attachment1
	
		beams[userId] = beam
		print("Created beam from ".. fromHead.Parent.Name .." to ".. toHead.Parent.Name)
	end
	
	-- Function to update the beams
	local function updateBeams()
		if not beamsActive then return end -- Only update if beams are active
	
		-- Get all players in the game
		local players = game.Players:GetPlayers()
	
		-- Loop through each player
		for _, player in pairs(players) do
			-- Get the player's character
			local character = player.Character or player.CharacterAdded:Wait()
	
			-- Check if the character exists
			if character then
				-- Get the player's head
				local head = character:WaitForChild("Head")
	
				-- Check if a beam already exists for this player
				local beam = beams[player.UserId]
				if not beam then
					-- Create a new Beam
					createBeam(localPlayer.Character.Head, head, player.UserId)
				else
					-- Update the beam's points
					beam.Attachment0.Parent = localPlayer.Character.Head
					beam.Attachment1.Parent = head
				end
			else
				-- Remove the beam if the player's character doesn't exist
				local beam = beams[player.UserId]
				if beam then
					beam:Destroy()
					beams[userId] = nil
					print("Removed beam to player ".. player.Name)
				end
			end
		end
	end
	
	-- Function to set up character-related events
	local function setupCharacter(character)
		local localHead = character:WaitForChild("Head")
	
		-- Update the beams with the new character
		updateBeams()
	
		-- Update the beams every 0.1 seconds
		while character and character.Parent do
			updateBeams()
			wait(0.1)
		end
	end
	
	-- Toggle button functionality
	toggleButton.MouseButton1Click:Connect(function()
		beamsActive = not beamsActive -- Toggle the beams' active state
	
		if not beamsActive then
			-- Hide all beams if toggled off
			for userId, beam in pairs(beams) do
				beam:Destroy()
				beams[userId] = nil
			end
			print("All beams hidden.")
		else
			-- Reset and update beams when activated
			for _, player in pairs(game.Players:GetPlayers()) do
				local character = player.Character or player.CharacterAdded:Wait()
				setupCharacter(character)
			end
		end
	end)
	
	-- Connect to player character added event
	localPlayer.CharacterAdded:Connect(function(character)
		setupCharacter(character)
	end)
	
	-- Initial setup for current character (if already in the game)
	if localPlayer.Character then
		setupCharacter(localPlayer.Character)
	end
	
end;
task.spawn(C_17);
-- StarterGui.ScreenGui.Frame.TeleportToPosition.LocalScript
local function C_1a()
local script = G2L["1a"];
	local player = game.Players.LocalPlayer
	local savedPositions = {} -- Table to store saved positions
	
	local function createGUI()
		local screenGui = Instance.new("ScreenGui")
		screenGui.Name = "CustomFrameGui"
		screenGui.Parent = player:WaitForChild("PlayerGui")
	
		local frame = Instance.new("Frame")
		frame.Name = "CustomFrame"
		frame.Size = UDim2.new(0, 300, 0, 400)
		frame.Position = UDim2.new(0.5, -150, 0.5, -200)
		frame.BackgroundColor3 = Color3.fromRGB(103, 0, 2) -- Dark red background
		frame.BorderSizePixel = 0
		frame.Visible = false -- Start hidden
		frame.Parent = screenGui
	
		local scrollingFrame = Instance.new("ScrollingFrame")
		scrollingFrame.Size = UDim2.new(1, 0, 0, 300)
		scrollingFrame.Position = UDim2.new(0, 0, 0, 50)
		scrollingFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
		scrollingFrame.BorderSizePixel = 0
		scrollingFrame.Parent = frame
		scrollingFrame.ScrollBarThickness = 10
		scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 0) -- Initialize canvas size
	
		local listLayout = Instance.new("UIListLayout")
		listLayout.FillDirection = Enum.FillDirection.Vertical
		listLayout.SortOrder = Enum.SortOrder.LayoutOrder
		listLayout.Padding = UDim.new(0, 5)
		listLayout.Parent = scrollingFrame
	
		local saveButton = Instance.new("TextButton")
		saveButton.Size = UDim2.new(0, 100, 0, 30) -- Smaller button size
		saveButton.Position = UDim2.new(0.5, -50, 0, 10) -- Adjust position
		saveButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
		saveButton.Text = "Save Position"
		saveButton.TextColor3 = Color3.fromRGB(255, 255, 255)
		saveButton.Parent = frame
	
		-- Add rounded edges to the save button
		local saveButtonCorner = Instance.new("UICorner")
		saveButtonCorner.CornerRadius = UDim.new(0, 10)
		saveButtonCorner.Parent = saveButton
	
		-- Function to save character position
		local function savePosition()
			local character = player.Character or player.CharacterAdded:Wait()
	
			if character and character.PrimaryPart then
				local position = character.PrimaryPart.Position
	
				-- Save the position in the table
				table.insert(savedPositions, position)
	
				-- Create the button for saved position
				local textButton = Instance.new("TextButton")
				textButton.Size = UDim2.new(1, 0, 0, 30) -- Small button size
				textButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
				textButton.Text = string.format("X: %.2f, Y: %.2f, Z: %.2f", position.X, position.Y, position.Z)
				textButton.TextColor3 = Color3.fromRGB(255, 0, 0)
				textButton.Parent = scrollingFrame
	
				-- Add rounded edges to the text button
				local textButtonCorner = Instance.new("UICorner")
				textButtonCorner.CornerRadius = UDim.new(0, 5)
				textButtonCorner.Parent = textButton
	
				-- Teleport functionality
				textButton.MouseButton1Click:Connect(function()
					character:SetPrimaryPartCFrame(CFrame.new(position))
				end)
	
				-- Update the canvas size for scrolling
				scrollingFrame.CanvasSize = scrollingFrame.CanvasSize + UDim2.new(0, 0, 0, 35)
	
				print("Button created for position:", position) -- Debugging output
			else
				warn("Character or PrimaryPart not found!")
			end
		end
	
		saveButton.MouseButton1Click:Connect(savePosition)
	
		-- Function to recreate saved position buttons
		local function recreatePositionButtons()
			for _, position in ipairs(savedPositions) do
				local textButton = Instance.new("TextButton")
				textButton.Size = UDim2.new(1, 0, 0, 30) -- Small button size
				textButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
				textButton.Text = string.format("X: %.2f, Y: %.2f, Z: %.2f", position.X, position.Y, position.Z)
				textButton.TextColor3 = Color3.fromRGB(255, 0, 0)
				textButton.Parent = scrollingFrame
	
				-- Add rounded edges to the text button
				local textButtonCorner = Instance.new("UICorner")
				textButtonCorner.CornerRadius = UDim.new(0, 5)
				textButtonCorner.Parent = textButton
	
				-- Teleport functionality
				textButton.MouseButton1Click:Connect(function()
					local character = player.Character or player.CharacterAdded:Wait()
					character:SetPrimaryPartCFrame(CFrame.new(position))
				end)
			end
		end
	
		recreatePositionButtons() -- Call to recreate buttons when the GUI is created
	
		-- Draggable functionality for the entire frame
		local dragToggle = false
		local dragInput
		local startPos
	
		frame.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 then
				dragToggle = true
				startPos = input.Position - frame.Position
				input.Changed:Connect(function()
					if input.UserInputState == Enum.UserInputState.End then
						dragToggle = false
					end
				end)
			end
		end)
	
		frame.InputChanged:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseMovement then
				dragInput = input
			end
		end)
	
		game:GetService("RunService").RenderStepped:Connect(function()
			if dragToggle and dragInput then
				local newPos = dragInput.Position - startPos
				frame.Position = UDim2.new(0, newPos.X, 0, newPos.Y)
			end
		end)
	
		-- Toggle button functionality
		local toggleButton = game.Players.LocalPlayer.PlayerGui.ScreenGui.Frame.TeleportToPosition -- Adjust path if needed
	
		toggleButton.MouseButton1Click:Connect(function()
			frame.Visible = not frame.Visible -- Toggle the visibility of the main frame
		end)
	end
	
	-- Create GUI for the first character
	player.CharacterAdded:Connect(function()
		createGUI()
	end)
	
	-- Initial creation for the current character (if already in the game)
	if player.Character then
		createGUI()
	end
	
end;
task.spawn(C_1a);
-- StarterGui.ScreenGui.Frame.Jump Power (Normal).LocalScript
local function C_21()
local script = G2L["21"];
	-- Ensure this runs in an environment where Player and GUI elements are accessible
	local player = game.Players.LocalPlayer
	
	local function onCharacterAdded(character)
		local humanoid = character:WaitForChild("Humanoid")
	
		local button = script.Parent -- The button in your executor GUI
		local textBox = button:FindFirstChild("TextBox") -- Ensure TextBox is a child of the button
	
		local isJumpBoostActive = false
		local originalJumpPower = humanoid.JumpPower
	
		button.MouseButton1Click:Connect(function()
			print("Button clicked!") -- Debugging: confirm the button is clicked
	
			local jumpIncrease = tonumber(textBox.Text)
	
			if jumpIncrease and jumpIncrease >= 1 and jumpIncrease <= 999 then
				isJumpBoostActive = not isJumpBoostActive -- Toggle the state
	
				if isJumpBoostActive then
					humanoid.JumpPower = originalJumpPower + jumpIncrease
					button.Text = "Jump Power (Normal)" -- Change button text when active
					print("Jump Boost Activated: " .. humanoid.JumpPower) -- Debugging
				else
					humanoid.JumpPower = originalJumpPower -- Reset to original jump power
					button.Text = "Jump Power (Normal)" -- Change button text when inactive
					print("Jump Boost Deactivated: " .. humanoid.JumpPower) -- Debugging
				end
			else
				print("Invalid number: Please enter a valid number between 1 and 999.")
			end
		end)
	end
	
	-- Connect the CharacterAdded event
	player.CharacterAdded:Connect(onCharacterAdded)
	
	-- Initial setup for the current character (if already in the game)
	if player.Character then
		onCharacterAdded(player.Character)
	end
	
end;
task.spawn(C_21);
-- StarterGui.ScreenGui.Frame.Air Jump.LocalScript
local function C_26()
local script = G2L["26"];
	local player = game.Players.LocalPlayer
	
	local function onCharacterAdded(character)
		local humanoid = character:WaitForChild("Humanoid")
		local UserInputService = game:GetService("UserInputService")
	
		local jumpHeight = 50 -- Adjust this value for desired jump height
	
		-- Variable to track if infinite jumps are enabled
		local infiniteJumpsEnabled = false
	
		-- Function to enable infinite air jumps
		local function onJumpRequest()
			if infiniteJumpsEnabled and humanoid and humanoid:GetState() == Enum.HumanoidStateType.Freefall then
				humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
				humanoid.JumpPower = jumpHeight
			end
		end
	
		-- Connect the JumpRequest event to the function
		UserInputService.JumpRequest:Connect(onJumpRequest)
	
		-- Toggle functionality (change this to your actual toggle button reference)
		local toggleButton = script.Parent -- Change this to the actual reference to your button if needed
	
		-- Toggle button functionality
		toggleButton.MouseButton1Click:Connect(function()
			infiniteJumpsEnabled = not infiniteJumpsEnabled -- Toggle the state
			if infiniteJumpsEnabled then
				print("Infinite jumps enabled")
			else
				print("Infinite jumps disabled")
			end
		end)
	end
	
	-- Connect the CharacterAdded event
	player.CharacterAdded:Connect(onCharacterAdded)
	
	-- Initial setup for the current character (if already in the game)
	if player.Character then
		onCharacterAdded(player.Character)
	end
	
end;
task.spawn(C_26);
-- StarterGui.ScreenGui.Frame.Speed (Normal).LocalScript
local function C_2d()
local script = G2L["2d"];
	-- Ensure this runs in an environment where Player and GUI elements are accessible
	local player = game.Players.LocalPlayer
	
	local function onCharacterAdded(character)
		local humanoid = character:WaitForChild("Humanoid")
		local button = script.Parent -- The button in your executor GUI
		local textBox = button:FindFirstChild("TextBox") -- Ensure TextBox is a child of the button
	
		local isSpeedBoostActive = false
		local originalWalkSpeed = humanoid.WalkSpeed
	
		button.MouseButton1Click:Connect(function()
			print("Button clicked!") -- Debugging: confirm the button is clicked
	
			local speedIncrease = tonumber(textBox.Text)
	
			if speedIncrease and speedIncrease >= 1 and speedIncrease <= 999 then
				isSpeedBoostActive = not isSpeedBoostActive -- Toggle the state
	
				if isSpeedBoostActive then
					humanoid.WalkSpeed = originalWalkSpeed + speedIncrease
					button.Text = "Speed (Normal)" -- Change button text when active
					print("Speed Boost Activated: " .. humanoid.WalkSpeed) -- Debugging
				else
					humanoid.WalkSpeed = originalWalkSpeed -- Reset to original speed
					button.Text = "Speed (Normal)" -- Change button text when inactive
					print("Speed Boost Deactivated: " .. humanoid.WalkSpeed) -- Debugging
				end
			else
				print("Invalid number: Please enter a valid number between 1 and 999.")
			end
		end)
	end
	
	-- Connect the CharacterAdded event
	player.CharacterAdded:Connect(onCharacterAdded)
	
	-- Initial setup for the current character (if already in the game)
	if player.Character then
		onCharacterAdded(player.Character)
	end
	
end;
task.spawn(C_2d);
-- StarterGui.ScreenGui.Frame.X.LocalScript
local function C_32()
local script = G2L["32"];
	local button = script.Parent -- The X button
	local frame = button.Parent -- Assuming the button is a child of the Frame
	
	button.MouseButton1Click:Connect(function()
		-- Loop through all children of the parent and destroy them
		for _, child in ipairs(frame:GetChildren()) do
			if child:IsA("Script") or child:IsA("LocalScript") then
				child:Destroy() -- Stop and remove scripts
			end
		end
	
		frame:Destroy() -- This removes the entire Frame (and its contents) from the GUI
	end)
	
end;
task.spawn(C_32);

return G2L["1"], require;
